// Generated by ndarray-bundle (https://www.npmjs.org/package/ndarray-bundle)

var ndarray = module.exports = require("ndarray");

function lazyLoad(target, properties) {
	Object.keys(properties).forEach(function (key) {
		var value = properties[key];
		if (typeof value === 'function') {
			if (Object.defineProperty) {
				Object.defineProperty(target, key, {
					configurable: true,
					enumerable: true,
					get: function () {
						var actualValue = value();
						Object.defineProperty(target, key, {
							value: actualValue,
							configurable: true,
							enumerable: true
						});
						return actualValue;
					}
				});
			} else {
				target[key] = value();
			}
		} else {
			target[key] = lazyLoad(target[key] || {}, value);
		}
	});
	return target;
}

lazyLoad(ndarray, {
	"complex": function () {return require("ndarray-complex");},
	"fill": function () {return require("ndarray-fill");},
	"ops": function () {return require("ndarray-ops");},
	"zeros": function () {return require("zeros");},
	"is": function () {return require("isndarray");},
	"pool": function () {return require("ndarray-scratch");},
	"sort": function () {return require("ndarray-sort");},
	"util": {
		"pack": function () {return require("ndarray-pack");},
		"unpack": function () {return require("ndarray-unpack");},
		"binarySearch": function () {return require("binary-search-bounds");},
		"select": function () {return require("ndarray-select");},
		"imshow": function () {return require("ndarray-imshow");}
	},
	"matrix": {
		"mul": function () {return require("ndgemm");}
	},
	"signal": {
		"convolve": function () {return require("ndarray-convolve");},
		"fft": function () {return require("ndarray-fft");},
		"phaseUnwrap": function () {return require("phase-unwrap");},
		"translate": function () {return require("ndarray-translate");},
		"filters": {
			"gaussian": function () {return require("ndarray-gaussian-filter");},
			"translateFft": function () {return require("ndarray-translate-fft");}
		}
	},
	"numeric": {
		"prefixSum": function () {return require("ndarray-prefix-sum");},
		"moments": function () {return require("ndarray-moments");},
		"distance": function () {return require("ndarray-distance");}
	},
	"image": {
		"linearInterpolate": function () {return require("ndarray-linear-interpolate");},
		"luminance": function () {return require("luminance");},
		"warp": function () {return require("ndarray-warp");},
		"rotate": function () {return require("image-rotate");},
		"phaseAlign": function () {return require("phase-align");},
		"colorMap": function () {return require("apply-colormap");}
	},
	"io": {
		"wav": function () {return require("ndarray-wav");},
		"pixels": {
			"get": function () {return require("get-pixels");},
			"save": function () {return require("save-pixels");}
		},
		"binvox": {
			"save": function () {return require("ndarray-to-binvox");}
		},
		"string": function () {return require("ndarray-string");}
	},
	"sparse": {
		"proxy": function () {return require("ndarray-proxy");},
		"bit": function () {return require("ndarray-bit");},
		"hash": function () {return require("ndarray-hash");},
		"segment": function () {return require("ndarray-segment");}
	}
});
